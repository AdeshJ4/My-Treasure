-> Calling a server is not going to happen immediately perhaps it is going to take half a second or longer 
-> axios.get() method return promise.
-> A promise is a object that holds the eventual result or failure of an asynchronous(long running opration) operation.
-> All promises have method called '.then()' and ' .catch()'




import React, { useEffect, useState } from 'react';
import axios from 'axios';


const Fun = () => {
  const [users, setUsers] = useState([]);

  useEffect(()=> {
    axios.get('https://jsonplaceholder.typicode.com/users')
      .then((res)=> setUsers(res.data))
      .catch((err)=>console.log(err.message))
  }, []);

  return (
    <>
      <ol>
        {users.map((user)=><li key={user.id}>{user.name}</li>)}
      </ol>
    </>
  )
}

export default Fun