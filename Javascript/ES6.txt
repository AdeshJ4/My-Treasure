ES6 (ECMAScript 2015) introduced some new features and enhancements to JavaScript, including new data types and improvements to existing ones. Here are some key data types and features introduced or enhanced in ES6:

1. **`let` and `const` Declarations:**
   - ES6 introduced block-scoped variables using `let` and `const`. `let` allows for the declaration of variables with block scope, while `const` is used for constants.

   ```javascript
   let variable = 10;
   const constantValue = 42;
   ```

2. **Arrow Functions:**
   - Arrow functions provide a more concise syntax for defining functions. They also capture the `this` value lexically.

   ```javascript
   const add = (a, b) => a + b;
   ```

3. **Template Literals:**
   - Template literals allow for easier string interpolation and multiline strings.

   ```javascript
   const name = "Alice";
   const greeting = `Hello, ${name}!`;
   ```

4. **Destructuring Assignment:**
   - Destructuring assignment allows you to extract values from arrays or objects and assign them to variables in a more concise way.

   ```javascript
   const person = { name: "Bob", age: 30 };
   const { name, age } = person;
   ```

5. **Default Parameters:**
   - ES6 allows you to set default values for function parameters.

   ```javascript
   function greet(name = "World") {
       console.log(`Hello, ${name}!`);
   }
   ```

6. **Rest and Spread Operators:**
   - The rest (`...`) and spread operators allow you to handle variable numbers of arguments or elements more easily.

   ```javascript
   function sum(...numbers) {
       return numbers.reduce((total, num) => total + num, 0);
   }

   const array1 = [1, 2, 3];
   const array2 = [4, 5, 6];
   const combinedArray = [...array1, ...array2];
   ```

7. **Map and Set:**
   - ES6 introduced the `Map` and `Set` data structures for more advanced key-value mapping and unique element storage.

   ```javascript
   const myMap = new Map();
   myMap.set("key", "value");

   const mySet = new Set();
   mySet.add(1);
   mySet.add(2);
   ```

explain set in javascript:
==========================

-> A JavaScript Set is a collection of unique values
