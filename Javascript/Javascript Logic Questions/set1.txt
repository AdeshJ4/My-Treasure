Q] Sum of Digits Using Iteration
--------------------------------

INPUT: 1234
OUTPUT: 10

INPUT: 123
OUTPUT: 6

INPUT: 12
OUTPUT: 3

INPUT: 1235
OUTPUT: 11


code: 
function sumDigitsIterative(n) {
    let sum = 0;
    while (n > 0) {
        sum += n % 10; // Extract last digit and add to sum
        n = Math.floor(n / 10); // Remove last digit
    }
    return sum;
}


using recursion: 
----------------
function sumOfDigits(num){
  if(num === 0) return 0;
  return (num % 10) + sumOfDigits(Math.trunc(num/10)) 
}

============================================================================================================================================================

Q] Count Digits:

INPUT: 14445
OUTPUT: 5

INPUT: 1234
OUTPUT: 4

INPUT: 12
OUTPUT: 2

INPUT: 1
OUTPUT: 1

code: 
function calculateDigits(n) {
    let count = 0;
    while (n > 0) {
        count++;
        n = Math.floor(n / 10);
    }

    return count;
}

using recursion: 
----------------

function calculateDigits(num){
  if(num === 0) return 0;
  return 1 + calculateDigits(Math.trunc(num / 10))
}


============================================================================================================================================================



Q] Reverse an array: 
====================
Input: [10, 20, 30, 40, 50]
Output: [ 50, 40, 30, 20, 10 ]

sol 1: using reverse()
arr.reverse();

sol 2: 
function reverseArray(arr){
  let reverse = [];
  for(let i = arr.length-1; i>=0; i--){
    reverse.push(arr[i]);
  }

  return reverse;
}


// using recursion: 

function reverseArray(arr, start = 0, end = arr.length - 1) {
    if (start >= end) return arr;

    // Swap elements
    [arr[start], arr[end]] = [arr[end], arr[start]];

    return reverseArray(arr, start + 1, end - 1);
}

=============================================================================================================================



Q. Adding elements of array: 

1. using for loop
------------------
function addElements(arr){
  let sum = 0;
  for(let num of arr){
    sum+=num;
  }

  return num;
}

2. reduce() function
---------------------
function addElements(arr){
  return arr.reduce((accumulator, curElement)=>{
    return accumulator + curElement;
  }, 0)
}


3. recursion: 
-------------

function addELements(arr) {
    if (arr.length === 0) return 0;
    return arr[0] + addELements(arr.slice(1))
}


=============================================================================================================================

Q] multiply elements of array

1. reduce method
function multiplyElements(arr){
    return arr.reduce((accumulator, curElement)=>{
        return accumulator * curElement;
    }, 1);
}


=============================================================================================================================

Q] dob property should not change
const user = {
    id: 101,
    fullName: 'Adesh',
    dob: '2001-06-22'
}
const propertyDescriptor = {
    value: user.dob,
    writable: false
}
Object.defineProperty(user, "dob", propertyDescriptor);
user.dob = '2001-07-23';    
console.log(user);




============================================================================================================================


count how many times a character occur in a string: 

function countCharacter(str, target){
  let count = 0;
  for(let i=0; i<str.length; i++){
    if(str.toLowerCase() === char.toLowerCase()){
      count++;
    }
  }

  return count;
}

============================================================================================================================

Question 3 : check given object is array or not.

INPUT : []
OUTPUT: true
INPUT : {}
OUTPUT: false
code: 
function checkArray(arr){
    return Array.isArray(arr);
} // return true or false


============================================================================================================================

Question 4 : How to empty an array.

code : 

solution 1: using length property 
arr.length = 0;

solution 2: using while loop
while(arr.length > 0){
    arr.pop();
}

solution 3: using splice()
arr.splice(0);  // only give starting position and omit 2nd argument.

solution 4 : reassigning array
arr = [];  // only with var and let




============================================================================================================================

Question 5 : check given number is Integer or not.

INPUT : 10
OUTPUT: Integer / true
INPUT : 10.15
OUTPUT: Not Integer / false

code 1: using Number.isInteger()
function checkInteger(num){
    return Number.isInteger(num);
}// 

code 2: using  remainder operator (%) => returns the remainder
// Dividend/Divisor = Quotient reminder  
// 12/1 = 12 0   
// 12/2 = 6 0
// 12.5/1 = 12 0.5
// 12.5/6 = 2 0.5
function checkInteger(num){
    if(num%1===0){
        log("Integer")
    }else{
        log('Not Integer')
    }
}

code 3: using Math.round() -> 
function checkInteger(num){
    return num === Math.round(num);  // 10 === Math.round(10)  âœ”  ,   10.4  === Math.round(10.4=>10)  X,  10.5  === Math.round(10.5=>11)  X
}


============================================================================================================================

Question 6 : check given number is Float or not.

INPUT : 10.1
OUTPUT: Float
INPUT : 10
OUTPUT: Integer

function checkFloat(num){
    if(num !== Math.round(num)){// 10.5 !== 10
        log()
    }
}


============================================================================================================================

Question 7 : duplicate the no inside array

INPUT: [10, 20, 30]
OUTPUT: [10, 20, 30, 10, 20, 30]

code : 
function duplicateArray(array){
    const temp1 = [...array, ...array];
    const temp2 = array.concat(array);

    return temp2;
};



============================================================================================================================

Question 8 : reverse a Number 
INPUT: 12
OUTPUT: 21
INPUT: 123
OUTPUT: 321


code 1: using split(), reverse(), join(), Number()
function reverseNumber(num){ 
    return Number(num.toString().split('').reverse().join(''));
}

code 2: using loop
function reverseNum(num) {
  let reverse = "";
  let strNum = num.toString();
  for (let i = strNum.length - 1; i >= 0; i--) {
    reverse += strNum[i];
  }
  return Number(reverse);
}

code 3: 
function reverseNum (num){
    let reverse = '';
    while(num > 0){  // 1234 , 123, 12
        let num1 = num % 10; // 1234%10=>4, 123%10=>3, 12%10=>2, 1%10=>1
        num = Math.floor(num / 10); // 1234/10=>123 , 123/10=>12, 12/10=>1
        reverse += num1;//4 3 2 1
    }
    return  Number(reverse);
}


code 4: recursion
function reverseNum(num) {
  if (num === 1) return 1;
  return num % 10 + '' + reverseNum(Math.trunc(num / 10))
}

============================================================================================================================

Question 9 : palindrome string (aba===aba, 101===101)
INPUT: aba
OUTPUT: true
INPUT: 101
OUTPUT: true

code: 

function palindrome(str){
    let reverse = str.split('').reverse().join('');
    return str === reverse;
}

function palindrome(str) {
  let reverseStr = "";
  for (let i = str.length - 1; i >= 0; i--) {
    reverseStr += str[i];
  }

  if (reverseStr === str) {
    return true;
  }
  return false;
}


============================================================================================================================

Question 10 : write a js code that return a string with letters in alphabetically order.
INPUT: Adesh1461
OUTPUT: 1146Adehs
INPUT: apple
OUTPUT: aelpp

code: 
function alphabeticalOrder(str){
    return str.split('').sort().join('');
}

function alphabeticalOrder(str){
    for(let i=0; i<str.length; i++){
        let isSorted = false;
        for(let j=1; j<str.length-i; j++){
            if(str[j] < str[j-1]){ 
                [str[j], str[j-1]] = [str[j-1],str[j]]
                isSorted = true;
            }
        }
        if(!isSorted){  
            return;
        }
    }
}
let str = 'dcbaA1223'
let newStr = str.split('');
alphabeticalOrder(newStr);
console.log(newStr.join(''));


============================================================================================================================

Question 11 : first letter of each word in uppercase
INPUT: adesh jadhav
OUTPUT: Adesh Jadhav

function capitalizedWord(str){
    return str.split(' ').map((ele)=>{
        return ele.charAt(0).toUpperCase() + ele.slice(1); 
    }).join(' ');
}


============================================================================================================================

Question 12 : calculate how many times given element occur in given string
INPUT: a
OUTPUT: 2 times

code 1 : 
function fun(str, target) {
  let obj = {};
  for (let key of str) {
    if (obj[key]) {
      obj[key]++;
    } else {
      obj[key] = 1;
    }
  }

  for (let key in obj) {
    if (key === target) {
      console.log(target, obj[key]);
      break;
    }
  }
}
fun("Apple", "p");


code 2: 
function occurrenceOfSpecificCharacter(str, target) {
  let count = 0;
  for (let num of str) {
    if (num === target) {
      count++;
    }
  }
  return count;
}





============================================================================================================================

Question 13 : calculate how many times each element occur in given string
INPUT: apple
OUTPUT: {a: 1, p: 2, l: 1, e: 1};

function calculateOccurrenceOfAllCharacters(str){
    const occurrences = {};
    str.split('').forEach((ele)=>{
        if(obj.hasOwnProperty(ele)){
            obj[ele]++;
        }else{
            obj[ele] = 1;
        }
    });
    return occurrences;
}

============================================================================================================================

Question 14 : calculate some of elements inside an array.
INPUT: [10, 20, 30]
OUTPUT: 60

code 1 : using reduce ()
function calculateSumOfArray(array){  // [10, 20, 30]
    return array.reduce((accumulator, curEle)=>{  
        return accumulator + curEle;  // 0 + 10=> 10, 10 + 20=>30, 30 + 30=> 60 
    }, 0);
}

code 2 : using sum = 0;
function calculateSumOfArray(array){
    let sum = 0;
    for(let num of array){
        sum += num;
    }
    return sum;
}

code 3: using forEach()
function calculateSumOfArray(array){
    let sum = 0;
    array.forEach((ele)=>{
        sum += ele;
    })
    return sum;
}





============================================================================================================================

Question 15 : calculate some of only integers from mixed array.
INPUT: [11, 'a', 'b', 20, 30, 'c']
OUTPUT: 61

code 1: 
function calculateOnlyNumbers(array){
    let sum = 0;
    array.forEach((ele)=>{
        if(typeof ele === 'number'){
            sum += ele;
        }
    });
    return sum;
}



============================================================================================================================


want element, don't want element: 
================================

1. want gender="M": ele.gender === "M";  // return only males
2. don't want gender: ele.gender !== "M"   // return female, unknown
3. want gender Property: ele.hasOwnProperty("gender") / obj[key]  // return only gender objects
4. don't want gender property: !ele.hasOwnProperty("gender")   // return everything except gender


Question 16 : return elements from array which contain gender property
INPUT: [
    {id: 101, fname: 'Adesh', gender: 'M'},
    {id: 102, fname: 'Akshay', gender: 'M'},
    {id: 103, fname: 'Manoj'}, 
]
OUTPUT: [
    {id: 101, fname: 'Adesh', gender: 'M'},
    {id: 102, fname: 'Akshay', gender: 'M'},
]

code 1 : 
const res = arr.filter(ele => ele.hasOwnProperty('gender'))

code 2: 

function onlyGender(array){
    for(let i=array.length-1; i>=0; i--){
        if(array[i]['gender'] === undefined){
            array.splice(i, 1);
        }
    }
}


============================================================================================================================

Question 17 : return elements from array which contain gender="M" 
INPUT: [
    {id: 101, fname: 'Adesh', gender: 'M'},
    {id: 102, fname: "Manoj", gender: "Unknown" },
    {id: 103, fname: 'Sita', gender: 'F'}, 
    {id: 104, fname: 'Ram', gender: 'M'},
];
OUTPUT: [
    {id: 101, fname: 'Adesh', gender: 'M'},
    {id: 102, fname: 'Akshay', gender: 'M'},
]

code 1: 
function returnOnlyMale(array){
    return array.filter((ele)=>{
        return ele.gender === 'M';
    });
}

code 2: 
function onlyGender(array){
    for(let i=array.length-1; i>=0; i--){
        if(array[i]['gender'] !== 'M'){  // removes female, unknown
            array.splice(i, 1);
        }
    }
}

============================================================================================================================

Question 18 : return elements from array which don't contain gender="M" 
INPUT: [
    {id: 101, fname: 'Adesh', gender: 'M'},
    {id: 102, fname: "Manoj", gender: "Unknown" },
    {id: 103, fname: 'Sita', gender: 'F'}, 
]
OUTPUT: [
    {id: 102, fname: "Manoj", gender: "Unknown" }
    {id: 103, fname: 'Sita', gender: 'F'}, 
]

code 1: by creating new array
function removeGenderMale(arr){
    return arr.filter((ele)=>{
        return ele.gender !== "M";
    })
}

code 2: by doing modification in original array
function removeM(arr){
  for(let i=0; i<arr.length; i++){
    if(arr[i]["gender"] === "M"){
      arr.splice(i, 1); 
    }
  }
}

============================================================================================================================

Question 19 : clone array
1. using spread operator
2. using concat method  -> use to add two arrays
3. using forEach()
4. using map()

const arr = [10, 20, 30];
const arr1 = [...arr];
const arr2 = arr.concat();
const arr3 = [];
arr.forEach((ele)=>{
    arr3.push(ele)
});
const arr4 = arr.map(ele=>{
    return ele;
})





============================================================================================================================

Question 20 : return most frequent element of array.
INPUT: [10, 20, 30, 10, 10, 50]
OUTPUT: [10]
INPUT: [10, 10, 20, 20, 50]
OUTPUT: [10, 20]

function mostFrequentElementOfArray(array) {
  const obj = {};
  for (let num of array) {
    if (obj.hasOwnProperty(num)) {  // if(obj[num]){...rest code}
      obj[num]++;
    } else {
      obj[num] = 1;
    }
  }
  let maxValue = 0;
  let maxProperty = [];
  for (let key in obj) {    // 1>2, 2>2
    if (obj[key] > maxValue) {
      maxValue = obj[key];
      maxProperty = [key]; // p
    } else if (obj[key] === maxValue) {
      maxProperty.push(key); // e  -> p, e
    }
  }
  return maxProperty;
}
const res = mostFrequentElementOfArray(["a", "p", "p", "l", "e", "e", "e"]);


============================================================================================================================

Question 21 : generate random no between given range.
INPUT: randomGenerator(0, 5) ; // 0 and 5 included.
OUTPUT: 1 or 5 or 0

function generateRandom(min, max){
    return Math.floor(Math.random() * (max - min + 1)) - min;
}



============================================================================================================================

Question 22 : union of two arrays: 

INPUT: [10, 20, 30] [20, 30, 40];
OUTPUT: [10, 20, 30, 40];

function unionArray(arr1, arr2){
  const arr = [...arr1, ...arr2];
  let uniqueArr = [];

  for(let i=0; i<arr.length; i++){
    let isDuplicate = false;
    for(let j=0; j<uniqueArr.length; j++){
      if(arr[i] === uniqueArr[j]){
        isDuplicate = true;
        break;
      }
    }

    if(!duplicate){
      uniqueArr.push(arr[i]);
    }
  }
}