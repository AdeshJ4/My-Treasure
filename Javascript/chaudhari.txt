Every object in JavaScript has a built-in property, which is called its prototype. The prototype is itself an object, so the 
prototype will have its own prototype, making what's called a prototype chain. The chain ends when we reach a prototype that has 
null for its own prototype.




When you try to access a property of an object: if the property can't be found in the object itself, the prototype is searched for 
the property. If the property still can't be found, then the prototype's prototype is searched, and so on until either the property 
is found, or the end of the chain is reached, in which case undefined is returned.



we can set prototype/parent by setting __proto__. 
let grandpa = {
    grandpaName: 'Uday'
}
let parent = {
    parentName: "Pramod", 
}
let child =  {
    childName: 'Adesh',
}

child.__proto__ = parent;  
parent.__proto__ = grandpa;

console.log(child.grandpaName);






