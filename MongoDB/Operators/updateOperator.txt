1. $set

-> operator replaces the value of a field with the specified value.
-> If the field does not exist, $set will add a new field with the specified value.


2. $unset

-> The $unset operator deletes a particular field.
-> If the field does not exist, then $unset does nothing.


3. $rename

-> The $rename operator updates the name of a field 
-> If the field to rename does not exist in a document, $rename does nothing


4. $inc

-> The $inc operator increments a field by a specified value.
-> The $inc operator accepts positive and negative values.
-> If it accepts +ve number then increase the no. it it accepts -ve no then decrees no.
-> If the field does not exist, $inc creates the field and sets the field to the specified value.
-> Use of the $inc operator on a field with a null value will generate an error.


5. $min

-> Only updates the field if the specified value is less than the existing field value.
-> If the field does not exist, the $min operator sets the field to the specified value

Input: [{ _id: 1, highScore: 800, lowScore: 200 } ]
Output: [{ _id: 1, highScore: 800, lowScore: 150 } ]
Query: db.tb1.updateOne({_id: 1}, {$min: {lowScore: 150}})



 6. $max

-> Only updates the field if the specified value is greater than the existing field value.
-> If the field does not exists, the $max operator sets the field to the specified value.

Input: [{ _id: 1, highScore: 800, lowScore: 150 } ]
Output: [{ _id: 1, highScore: 800, lowScore: 200 } ]
Query: db.tb1.updateOne({_id: 1}, {$max: {lowScore: 200}})



7. $mul

-> Multiplies the value of the field by the specified amount.

Input: [ { "_id": 1, "quantity": 3 } ]
Output: [ { "_id": 1, "quantity": 6 }]
Query: db.tb1.updateOne({_id: 1}, {$mul: {quantity: 2}})  // 3 * 2 = 6



1. Add a Single Property:
-------------------------
Input: [{name: 'Adesh'}]
Output: [{name: 'Adesh', age: 22}]
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {age: 22}});


1. Change A Single Property : 
---------------------------
Input : {name: 'Max'}
Output: {name: 'Maxi'}
Query: db.tb1.updateOne({id: 101}, {$set: {name: 'Maxi'}})


2. add multiple properties: 
----------------------------
Input: [ { name: 'Adesh' } ]
Output: [ { name: 'Adesh' company: 'DXC', gender: 'M' } ]
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {company: 'DXC', gender: 'M'}})


2. Change Multiple Properties: 
------------------------------
Input: [ { name: 'Adesh' age: 21, height: 5 } ]
Output:[ { name: 'Adesh' age: 22, height: 6 } ]
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {age: 22, height: 6}})


3. Rename a field in all documents:
-----------------------------------
Input: [
   {
     "_id": 1,
     "alias": [ "The American Cincinnatus", "The American Fabius" ],
     "mobile": "555-555-5555",
     "nmae": { "first" : "george", "last" : "washington" }        <------------- Change this property
   },
   {
     "_id": 2,
     "alias": [ "My dearest friend" ],
     "mobile": "222-222-2222",
     "nmae": { "first" : "abigail", "last" : "adams" }
   }
]
output: Input: [
   {
     "_id": 1,
     "alias": [ "The American Cincinnatus", "The American Fabius" ],
     "mobile": "555-555-5555",
     "name": { "first" : "george", "last" : "washington" }
   },
   {
     "_id": 2,
     "alias": [ "My dearest friend" ],
     "mobile": "222-222-2222",
     "name": { "first" : "abigail", "last" : "adams" }
   }
]

Query: db.tb1.updateMany({}, {$rename: {"nmae": "name"}})

==========================================================================================================

Objects


3. Add Single Object : 
----------------------
Input: [{name: 'Adesh'}]
Output: [{name: 'Adesh',location: { village: 'Lohegaon', city: 'Pune' }}] 
Query: db.tb1.updateOne({name: "Adesh"}, {$set: {location: {street: 'lohegaon', city: 'Pune'}}})

3. Add Multiple Objects: 
------------------------
Input: [{name: 'Adesh'}] 
Output: [{name: 'Adesh', obj1: { bikeName: 'Yamaha' }, obj2: { carName: 'BMW' }}] 
Query: db.tb1.updateOne({ name: 'Adesh' }, { $set: { obj1:{carName: 'BMW'}, obj2:{bikeName: 'Yamaha'} }})


3. Update Single Object: 
----------------------------
Input: [{name: 'Adesh',location: { village: 'Lohegaon' }}] 
Output: [{name: 'Adesh',location: { village: 'Palgad' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {'location.village': 'Palgad'}})


3. Update Multiple Objects: 
----------------------------
Input: [{name: 'Adesh',location: { village: 'Lohegaon', city: 'Pune' }}] 
Output: [{name: 'Adesh',location: { village: 'Palgad', city: 'Ratnagiri' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {'location.village': 'Palgad', 'location.city': 'Ratnagiri'}})

3. Replace whole object with another Object: 
--------------------------------------------
Input: [{name: 'Adesh',location: { village: 'Lohegaon', city: 'Pune' }}] 
Output: [{name: 'Adesh',location: { planet: 'Earth' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {'location': {planet: 'Earth'}}})

3. Add Single Property in existing object: 
----------------------------------
Input: [{name: 'Adesh',location: { planet: 'Earth' }}] 
Output: [{name: 'Adesh',location: {  planet: 'Earth' , village: 'Lohegaon'}}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {'location.village': 'Palgad'}})

3. Add Multiple Property in existing object: 
----------------------------------
Input: [{name: 'Adesh',location: { planet: 'Earth' }}] 
Output: [{name: 'Adesh',location: { village: 'Lohegaon', city: 'Pune', planet: 'Earth' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {'location.village': 'Lohegaon', 'location.city': 'Pune'}})

3. Remove Single property from existing object:
-----------------------------------------------
Input: [{name: 'Adesh',location: { village: 'Lohegaon', city: 'Pune', planet: 'Earth' }}] 
Output: [{name: 'Adesh',location: { village: 'Lohegaon', city: 'Pune' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$unset: {'location.planet': 1}})

3. Remove Multiple properties from existing object:
--------------------------------------------------
Input: [{name: 'Adesh', location: { village: 'Lohegaon', city: 'Pune', planet: 'Earth' }}] 
Output: [{name: 'Adesh', location: { village: 'Lohegaon' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$unset: {'location.city': 1, 'location.planet': 1}})

3. Delete Single Object: 
-------------------------
Input: [{name: 'Adesh', location: { vill: 'Lohegaon' } }]
output: [{name: 'Adesh' }]
Query: db.tb1.updateOne({name: 'Adesh'}, {$unset: {'location': 1}})

3. Delete Multiple Objects: 
-------------------------
Input: [{name: 'Adesh', location: { vill: 'Lohegaon' }, obj: {name: 'hey'} }]
output: [{name: 'Adesh' }]
Query: db.tb1.updateOne({name: 'Adesh'}, {$unset: {'location': 1, 'obj': 1}})

3. Rename a property of a Object: 
------------------------------
Input: [{name: 'Adesh', location: { vill: 'Lohegaon' }}] 
Output: [{name: 'Adesh', location: { village: 'Lohegaon' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$rename: {'location.vill': 'location.village'}`})


3. Rename Object Name: 
----------------------
Input: [{name: 'Adesh', location: { village: 'Lohegaon' }}] 
Output: [{name: 'Adesh', loc: { village: 'Lohegaon' }}] 
Query: db.tb1.updateOne({name: 'Adesh'}, {$rename: {'location': 'loc'}})


4. increase orders and decrease quantity: 
Input: [{sku: "abc123", quantity: 10, metrics: { orders: 2, ratings: 3.5 }}]
Output: [{sku: "abc123", quantity: 8, metrics: { orders: 4, ratings: 3.5 }}]
Query: db.tb1.updateOne({sku: "abc123"}, {$inc: {quantity: -2, "metrics.orders": 2}})
     

5. set lowScore to 150.

     
   

===========================================================================================================


Array : 

4. add a array:
---------------
Input : [{name: 'Adesh'}]
output: [{name: 'Adesh', hobbies: [ 'Swimming', 'Reading' ] }]
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {hobbies: ["Swimming", "Reading"]}})


4. Insert value inside a existing array.
---------------------------------------
Input : [{name: 'Adesh'}, hobbies: [ { name: 'Anime' } ]]
output: [{name: 'Adesh',hobbies: [ { name: 'Anime' }, { name: 'KDrama' } ] }]
Query: db.tb1.updateOne({name: 'Adesh'}, {$push: {hobbies: { name: 'KDrama' }}})

Input : [{name: 'Adesh'}, marks: [ 10, 20, 30] ]
output: [{name: 'Adesh',marks: [ 10, 20, 30, 40 ] }]
Query: db.tb1.updateOne({name: 'Adesh'}, {$push: {marks: 40}})


Input: [
   { _id: 1, scores: [ 44, 78, 38, 80, 89 ] },
   { _id: 2, scores: [ 45, 78, 38, 80, 89 ] } ,
   { _id: 3, scores: [ 46, 78, 38, 80, 89 ] } ,
   { _id: 4, scores: [ 47, 78, 38, 80, 89 ] }
]

Output: [
   { _id: 1, scores: [ 44, 78, 38, 80, 89, 95 ] },
   { _id: 2, scores: [ 45, 78, 38, 80, 89, 95 ] },
   { _id: 3, scores: [ 46, 78, 38, 80, 89, 95 ] },
   { _id: 4, scores: [ 47, 78, 38, 80, 89, 95 ] }
]
Query: db.tb1.updateOne({}, {$push: {scores: 95}})


5. Replace whole array with another Array: 
------------------------------------------
Input: [{name: 'Adesh', hobbies: [ 'Swimming', 'Reading' ] }]
output: [{name: 'Adesh', hobbies: [ {name: 'Anime'}, {name: 'KDrama'} ] }]
Query: db.tb1.updateOne({name: 'Adesh'}, {$set: {hobbies: [{name: 'Anime'}, {name: 'KDrama'}]}})
    



$each: 

-> $each is used with $push operator.
-> It allows you to push multiple values at once instead of pushing a single value.
-> This can be particularly useful when you want to append multiple elements to an existing array.

ex.1
Input : 
{
  "_id": 1,
  "name": "Bob",
  "hobbies": ["Swimming", "Reading"]
}
Output : 
{
  "_id": 1,
  "name": "Bob",
  "hobbies": ["Swimming", "Reading", "Painting", "Gardening"]
}
Query: db.tb1.updateOne({_id: 1}, {$push: {hobbies: {$each: ["Painting", "Gardening"]}}})

ex.2
Input: {
  "_id": 1,
  "grades": [
    { "subject": "Math", "score": 90 },
    { "subject": "History", "score": 85 }
  ]
}
Output: {
  "_id": 1,
  "grades": [
    { "subject": "Math", "score": 90 },
    { "subject": "History", "score": 85 },
    { "subject": "Science", "score": 92 },
    { "subject": "English", "score": 88 }
  ]
}
Query: db.tb1.updateOne({_id: 1}, {$push: {grades: {$each: [{ "subject": "Science", "score": 92 },{ "subject": "English", "score": 88 }]}}})


