Create: 

-> How to create a database
-> How to create a collection
-> How to create a documents.



-> To insert a document we have two methods: 

1. insertOne()
2. insertMany()


1. Create Database
use myDB

2. Create collection
db.createCollection('tb1');
or 
db.tb1.insertOne({name: 'Adesh'})

3. Create Documents
db.tb1.insertOne({name: 'Adesh', age: 22, CGPA: 8.81, passesOut: true})
db.tb1.insertMany([{name: 'Adesh'}, {name: 'Ram'}])






DataTypes: 
1. **String:** This is the most commonly used data type to store textual data.
db.tb4.insertOne({id: 101, name: 'Adesh'})


2. **Integer:** Used to store whole numbers.
db.tb4.insertOne({id: 101, age: 22})


3. **Double:** Used to store floating-point numbers.
db.tb4.insertOne({id: 101, price: 12.05})


4. **Boolean:** Stores either true or false.
db.tb4.insertOne({isOk: true})


5. **Arrays:** Allows you to store multiple values in a single field.
db.tb4.insertOne({id: 101, hobbies: ['h1', 'h2']})


6. **Object:** Used for embedded documents or sub-documents within a document.
db.tb4.insertOne({id: 102, address: {ciy: 'Pune',  village: 'Palgad'}})


7. **Null:** Represents a null or non-existent value.
db.tb4.insertOne({id: 101, age: null});


8. **Date:** Stores the current date or a specific date.
Note: MongoDB will store the date as a BSON Date type, which is automatically converted to ISO format (YYYY-MM-DDTHH:mm:ss.sssZ) when retrieved.
db.tb4.insertOne({id: 102, birth_date: new Date()});
db.tb4.insertOne({id: 102, birth_date: new Date("2001-06-22")});
db.tb4.insertOne({id: 102, birth_date: ISODate('2001-06-22')});
db.tb4.insertOne({id: 102, birth_date: ISODate("2023-01-01T12:00:00Z")});


9. **Timestamp:** Typically used to store the 'creation time of a document'.
db.tb4.insertOne({ "id": 102, "createdAt": new Timestamp() })


10. **Binary Data:** Can store binary data, such as images or documents.
db.tb4.insertOne({ "id": 102, "img": new BinData(0, "base64-encoded-binary-data") })


11. **ObjectId:** A 'special 12-byte identifier' typically employed as the 'primary key' for a document.
db.tb4.insertOne({"_id": ObjectId("61f39f009f3b0a68d62f9b8c"), name: 'Adesh'});
db.tb4.insertOne({"_id": 101, name: 'Adesh'});


13. **Geospatial Data Types:** MongoDB supports geospatial data types like Point, LineString, and Polygon for geospatial queries.

14. **Min/Max Keys:** Used to compare a value against the lowest and highest BSON elements.


12. **`Regular Expression`:** Allows you to store regular expressions for pattern matching.
{ "regexPattern": { "$regex": "^prefix", "$options": "i" } }









