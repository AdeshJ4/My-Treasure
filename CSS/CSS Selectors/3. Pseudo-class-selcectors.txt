3. Pseudo-class selectors (select elements based on a certain state): 
=====================================================================

For example, it can be used to:

Style an element when a user mouses over it
Style visited and unvisited links differently
Style an element when it gets focus


1. 'link' is a pseudo-class-selector which is used to select and style unvisited links
2. 'visited' is a pseudo-class-selector which is used to select and style visited links
3. 'hover ' is pseudo-class-selector which is used to select and style element once you mouse over it.





Sure! Letâ€™s break down **pseudo-class selectors** in CSS in a super simple way:

---

### ðŸŒŸ What is a Pseudo-Class Selector?

A **pseudo-class** is a keyword added to a selector that **targets an element in a specific state or condition**, without needing to add a class or ID.

It starts with a **colon (`:`)**.

---

### ðŸ”¥ Common Pseudo-Class Selectors:

#### 1. `:hover`
- When you hover over an element (like with your mouse).
```css
button:hover {
  background-color: blue;
}
```

#### 2. `:active`
- When an element is being clicked or tapped.
```css
a:active {
  color: red;
}
```

#### 3. `:focus`
- When an element is focused (like an input field when you click or tab into it).
```css
input:focus {
  border-color: green;
}
```

#### 4. `:first-child`
- Targets the **first child** of its parent.
```css
p:first-child {
  font-weight: bold;
}
```

#### 5. `:last-child`
- Targets the **last child** of its parent.
```css
li:last-child {
  color: red;
}
```

#### 6. `:nth-child(n)`
- Targets the **nth** child (1-based index).
```css
li:nth-child(2) {
  background: yellow;
}
```

#### 7. `:not(selector)`
- Targets elements that **do NOT** match the selector.
```css
button:not(.primary) {
  opacity: 0.5;
}
```