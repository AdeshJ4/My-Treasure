-> Used by printers, Operating system, web server, basically anywhere you want to process job based on order 
we received them.
-> Queue is data structure like stack, but follows FIFO. 
-> Queues are like Line up peoples in real world, peoples joined the line from back  and leave from the front.

Priority Queue: 

-> In Priority Queue items are processed based on Priority and not order.
-> if you add items to priority queue then they will not pop in FIFO order.
ex> if you add 5, 1, 3, 2, 4 then they will not remove like 5, 1, 3, 2, 4 they will remove like 1, 2, 3, 4, 5.
small number first by default.

-> There are two ways to implement priority queue.
1. Arrays
2. Heap 

Applications: 

we have resource and this resource must be shared among many consumers. so this consumer should line up 
and used the resource one by one.

-> Printers used Queue to managed jobs, it prints the job in order they are submitted.
-> Operating system used queue to managed processes, these process wait in queue.
-> Web servers also used queue to managed incoming requests. these requests go in Queues and get process in order 
they received.
-> Building live support system: for a example when you have problem with your web host, you jump to their 
website and used their live support, someone is there seating to respond peoples requests, he/she can not give 
support to all peoples at once. so you have to go in queue.


Operations: 

Note : All Operations run in O(1).

1. enqueue: adding item at the back of the queue.
2. dequeue: removing item from front of the queue.
3. peek: getting item at the front without removing it.
4. isEmpty: check empty or not
5. isFull: check full or not



There are three ways to implement Queue in java: 

1. Using Array
2. Using Linked List
3. Using Stack




circular array : 

ref 





